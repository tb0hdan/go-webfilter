// Code generated by mockery. DO NOT EDIT.
package mocks

import (
	"github.com/stretchr/testify/mock"
	"github.com/tb0hdan/go-webfilter/pkg/proc"
)

// MockLister is a mock implementation of the Lister interface
type MockLister struct {
	mock.Mock
}

// GetPIDs returns a list of all process IDs in the system
func (m *MockLister) GetPIDs() ([]string, error) {
	args := m.Called()
	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

// GetProcFDs returns a list of file descriptors for a given process ID
func (m *MockLister) GetProcFDs(pid string) ([]string, error) {
	args := m.Called(pid)
	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

// ReadProcFD reads the symbolic link of a file descriptor
func (m *MockLister) ReadProcFD(pid, fd string) (string, error) {
	args := m.Called(pid, fd)
	return args.String(0), args.Error(1)
}

// GetPidSocketInodes returns a list of socket inodes for a given process ID
func (m *MockLister) GetPidSocketInodes(pid string) ([]string, error) {
	args := m.Called(pid)
	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

// GetProcessInfoByInode returns process information for a given socket inode
func (m *MockLister) GetProcessInfoByInode(inode string) (*proc.ProcessInfo, error) {
	args := m.Called(inode)
	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*proc.ProcessInfo), args.Error(1)
}